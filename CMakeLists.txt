# Project info
cmake_minimum_required(VERSION 3.18)
project("Flex Launcher" 
        LANGUAGES C 
        VERSION "1.5" 
        DESCRIPTION "Customizable HTPC Application Launcher"
        HOMEPAGE_URL "https://github.com/complexlogic/flex-launcher")
set(EXECUTABLE_TITLE "flex-launcher")
set(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}")
include_directories(${PROJECT_BINARY_DIR})

# Minimum library versions for Linux
set(MIN_SDL_VERSION "2.0.14")
set(MIN_SDL_IMAGE_VERSION "2.0.5")
set(MIN_SDL_TTF_VERSION "2.0.15")
set(MIN_GLIBC_VERSION "2.31") # Enforced for .deb packages only

#Generate PKGBUILD script for Arch packages
if (PACKAGE STREQUAL "ARCH")
  configure_file("${PROJECT_SOURCE_DIR}/config/PKGBUILD.in" "${PROJECT_BINARY_DIR}/PKGBUILD")
  return()
endif ()
        
# Config setting keys
set(SETTING_DEFAULT_MENU "DefaultMenu")
set(SETTING_MAX_BUTTONS "MaxButtons")
set(SETTING_BACKGROUND_MODE "BackgroundMode")
set(SETTING_BACKGROUND_COLOR "BackgroundColor")
set(SETTING_BACKGROUND_IMAGE "BackgroundImage")
set(SETTING_SLIDESHOW_DIRECTORY "SlideshowDirectory")
set(SETTING_SLIDESHOW_IMAGE_DURATION "SlideshowImageDuration")
set(SETTING_SLIDESHOW_TRANSITION_TIME "SlideshowTransitionTime")
set(SETTING_ICON_SIZE "IconSize")
set(SETTING_ICON_SPACING "IconSpacing")
set(SETTING_TITLE_FONT "TitleFont")
set(SETTING_TITLE_FONT_SIZE "TitleFontSize")
set(SETTING_TITLE_FONT_COLOR "TitleColor")
set(SETTING_TITLE_SHADOWS "TitleShadows")
set(SETTING_TITLE_SHADOW_COLOR "TitleShadowColor")
set(SETTING_TITLE_OPACITY "TitleOpacity")
set(SETTING_TITLE_OVERSIZE_MODE "TitleOversizeMode")
set(SETTING_TITLE_PADDING "TitlePadding")
set(SETTING_HIGHLIGHT_FILL_COLOR "HighlightFillColor")
set(SETTING_HIGHLIGHT_FILL_OPACITY "HighlightFillOpacity")
set(SETTING_HIGHLIGHT_OUTLINE_SIZE "HighlightOutlineSize")
set(SETTING_HIGHLIGHT_OUTLINE_COLOR "HighlightOutlineColor")
set(SETTING_HIGHLIGHT_OUTLINE_OPACITY "HighlightOutlineOpacity")
set(SETTING_HIGHLIGHT_CORNER_RADIUS "HighlightCornerRadius")
set(SETTING_HIGHLIGHT_VPADDING "HighlightVPadding")
set(SETTING_HIGHLIGHT_HPADDING "HighlightHPadding")
set(SETTING_BUTTON_CENTERLINE "ButtonCenterline")
set(SETTING_SCROLL_INDICATORS "ScrollIndicators")
set(SETTING_SCROLL_INDICATOR_COLOR "ScrollIndicatorColor")
set(SETTING_SCROLL_INDICATOR_OPACITY "ScrollIndicatorOpacity")
set(SETTING_ON_LAUNCH "OnLaunch")
set(SETTING_RESET_ON_BACK "ResetOnBack")
set(SETTING_MOUSE_SELECT "MouseSelect")
set(SETTING_CLOCK_ENABLED "Enabled")
set(SETTING_CLOCK_SHOW_DATE "ShowDate")
set(SETTING_CLOCK_ALIGNMENT "Alignment")
set(SETTING_CLOCK_FONT "Font")
set(SETTING_CLOCK_FONT_COLOR "FontColor")
set(SETTING_CLOCK_SHADOWS "Shadows")
set(SETTING_CLOCK_SHADOW_COLOR "ShadowColor")
set(SETTING_CLOCK_OPACITY "Opacity")
set(SETTING_CLOCK_FONT_SIZE "FontSize")
set(SETTING_CLOCK_MARGIN "Margin")
set(SETTING_CLOCK_TIME_FORMAT "TimeFormat")
set(SETTING_CLOCK_DATE_FORMAT "DateFormat")
set(SETTING_CLOCK_INCLUDE_WEEKDAY "IncludeWeekday")
set(SETTING_SCREENSAVER_ENABLED "Enabled")
set(SETTING_SCREENSAVER_IDLE_TIME "IdleTime")
set(SETTING_SCREENSAVER_INTENSITY "Intensity")
set(SETTING_SCREENSAVER_PAUSE_SLIDESHOW "PauseSlideshow")
set(SETTING_GAMEPAD_ENABLED "Enabled")
set(SETTING_GAMEPAD_DEVICE "DeviceIndex")
set(SETTING_GAMEPAD_MAPPINGS_FILE "ControllerMappingsFile")
set(SETTING_GAMEPAD_LSTICK_XM "LStickX-")
set(SETTING_GAMEPAD_LSTICK_XP "LStickX+")
set(SETTING_GAMEPAD_LSTICK_YM "LStickY-")
set(SETTING_GAMEPAD_LSTICK_YP "LStickY+")
set(SETTING_GAMEPAD_RSTICK_XM "RStickX-")
set(SETTING_GAMEPAD_RSTICK_XP "RStickX+")
set(SETTING_GAMEPAD_RSTICK_YM "RStickY-")
set(SETTING_GAMEPAD_RSTICK_YP "RStickY+")
set(SETTING_GAMEPAD_LTRIGGER "LTrigger")
set(SETTING_GAMEPAD_RTRIGGER "RTrigger")
set(SETTING_GAMEPAD_BUTTON_A "ButtonA")
set(SETTING_GAMEPAD_BUTTON_B "ButtonB")
set(SETTING_GAMEPAD_BUTTON_X "ButtonX")
set(SETTING_GAMEPAD_BUTTON_Y "ButtonY")
set(SETTING_GAMEPAD_BUTTON_BACK "ButtonBack")
set(SETTING_GAMEPAD_BUTTON_GUIDE "ButtonGuide")
set(SETTING_GAMEPAD_BUTTON_START "ButtonStart")
set(SETTING_GAMEPAD_BUTTON_LEFT_STICK "ButtonLeftStick")
set(SETTING_GAMEPAD_BUTTON_RIGHT_STICK "ButtonRightStick")
set(SETTING_GAMEPAD_BUTTON_LEFT_SHOULDER "ButtonLeftShoulder")
set(SETTING_GAMEPAD_BUTTON_RIGHT_SHOULDER "ButtonRightShoulder")
set(SETTING_GAMEPAD_BUTTON_DPAD_UP "ButtonDPadUp")
set(SETTING_GAMEPAD_BUTTON_DPAD_DOWN "ButtonDPadDown")
set(SETTING_GAMEPAD_BUTTON_DPAD_LEFT "ButtonDPadLeft")
set(SETTING_GAMEPAD_BUTTON_DPAD_RIGHT "ButtonDPadRight")

# Default settings
set(DEFAULT_MENU "Main")
set(DEFAULT_MAX_BUTTONS 4)
set(DEFAULT_BACKGROUND_MODE "Color")
set(DEFAULT_BACKGROUND_COLOR_R "00")
set(DEFAULT_BACKGROUND_COLOR_G "00")
set(DEFAULT_BACKGROUND_COLOR_B "00")
set(DEFAULT_SLIDESHOW_IMAGE_DURATION "30000")
set(DEFAULT_SLIDESHOW_IMAGE_DURATION_CONFIG "30")
set(DEFAULT_SLIDESHOW_TRANSITION_TIME "1500")
set(DEFAULT_SLIDESHOW_TRANSITION_TIME_CONFIG "1.5")
set(DEFAULT_ICON_SIZE 256)
set(DEFAULT_ICON_SPACING "5%")
set(DEFAULT_FONT "OpenSans-Regular.ttf")
set(DEFAULT_FONT_SIZE 36)
set(DEFAULT_TITLE_FONT_COLOR_R "FF")
set(DEFAULT_TITLE_FONT_COLOR_G "FF")
set(DEFAULT_TITLE_FONT_COLOR_B "FF")
set(DEFAULT_TITLE_FONT_COLOR_A "FF")
set(DEFAULT_TITLE_SHADOWS "false")
set(DEFAULT_TITLE_SHADOW_COLOR_R "00")
set(DEFAULT_TITLE_SHADOW_COLOR_G "00")
set(DEFAULT_TITLE_SHADOW_COLOR_B "00")
set(DEFAULT_TITLE_SHADOW_COLOR_A "FF")
set(DEFAULT_TITLE_OPACITY "100%")
set(DEFAULT_TITLE_OVERSIZE_MODE "Shrink")
set(DEFAULT_TITLE_PADDING 20)
set(DEFAULT_HIGHLIGHT_FILL_COLOR_R "FF")
set(DEFAULT_HIGHLIGHT_FILL_COLOR_G "FF")
set(DEFAULT_HIGHLIGHT_FILL_COLOR_B "FF")
set(DEFAULT_HIGHLIGHT_FILL_COLOR_A "40")
set(DEFAULT_HIGHLIGHT_FILL_OPACITY "25%")
set(DEFAULT_HIGHLIGHT_OUTLINE_SIZE 0)
set(DEFAULT_HIGHLIGHT_OUTLINE_COLOR_R "00")
set(DEFAULT_HIGHLIGHT_OUTLINE_COLOR_G "00")
set(DEFAULT_HIGHLIGHT_OUTLINE_COLOR_B "FF")
set(DEFAULT_HIGHLIGHT_OUTLINE_COLOR_A "FF")
set(DEFAULT_HIGHLIGHT_OUTLINE_OPACITY "100%")
set(DEFAULT_HIGHLIGHT_CORNER_RADIUS 0)
set(DEFAULT_HIGHLIGHT_VPADDING 30)
set(DEFAULT_HIGHLIGHT_HPADDING 30)
set(DEFAULT_BUTTON_CENTERLINE "50%")
set(DEFAULT_SCROLL_INDICATORS "true")
set(DEFAULT_SCROLL_INDICATOR_COLOR_R "FF")
set(DEFAULT_SCROLL_INDICATOR_COLOR_G "FF")
set(DEFAULT_SCROLL_INDICATOR_COLOR_B "FF")
set(DEFAULT_SCROLL_INDICATOR_COLOR_A "FF")
set(DEFAULT_SCROLL_INDICATOR_OPACITY "100%")
set(DEFAULT_ON_LAUNCH "Hide")
set(DEFAULT_RESET_ON_BACK "false")
set(DEFAULT_MOUSE_SELECT "false")
set(DEFAULT_CLOCK_ENABLED "false")
set(DEFAULT_CLOCK_SHOW_DATE "false")
set(DEFAULT_CLOCK_ALIGNMENT "Left")
set(DEFAULT_CLOCK_FONT "SourceSansPro-Regular.ttf")
set(DEFAULT_CLOCK_MARGIN "5%")
set(DEFAULT_CLOCK_FONT_COLOR_R "FF")
set(DEFAULT_CLOCK_FONT_COLOR_G "FF")
set(DEFAULT_CLOCK_FONT_COLOR_B "FF")
set(DEFAULT_CLOCK_FONT_COLOR_A "FF")
set(DEFAULT_CLOCK_SHADOWS "false")
set(DEFAULT_CLOCK_SHADOW_COLOR_R "00")
set(DEFAULT_CLOCK_SHADOW_COLOR_G "00")
set(DEFAULT_CLOCK_SHADOW_COLOR_B "00")
set(DEFAULT_CLOCK_SHADOW_COLOR_A "FF")
set(DEFAULT_CLOCK_OPACITY "100%")
set(DEFAULT_CLOCK_FONT_SIZE "50")
set(DEFAULT_CLOCK_TIME_FORMAT "Auto")
set(DEFAULT_CLOCK_DATE_FORMAT "Auto")
set(DEFAULT_CLOCK_INCLUDE_WEEKDAY "true")
set(DEFAULT_SCREENSAVER_ENABLED "false")
set(DEFAULT_SCREENSAVER_IDLE_TIME "300")
set(DEFAULT_SCREENSAVER_INTENSITY "70%")
set(DEFAULT_SCREENSAVER_PAUSE_SLIDESHOW "true")
set(DEFAULT_GAMEPAD_ENABLED "false")
set(DEFAULT_GAMEPAD_DEVICE 0)

# Find dependencies - Linux
if (UNIX)
  find_package(PkgConfig MODULE REQUIRED)
  pkg_check_modules(SDL2 REQUIRED sdl2>=${MIN_SDL_VERSION})
  pkg_check_modules(SDL2_IMAGE REQUIRED SDL2_image>=${MIN_SDL_IMAGE_VERSION})
  pkg_check_modules(SDL2_TTF REQUIRED SDL2_ttf>=${MIN_SDL_TTF_VERSION})
  include_directories(${SDL2_INCLUDE_DIRS} 
    ${SDL2_IMAGE_INCLUDE_DIRS} 
    ${SDL2_TTF_INCLUDE_DIRS}
  )
  link_libraries(${SDL2_LIBRARIES} 
    ${SDL2_IMAGE_LIBRARIES} 
    ${SDL2_TTF_LIBRARIES}
    m
  )
endif ()

# Find dependencies - Windows
if (WIN32)
  find_package(SDL2 CONFIG REQUIRED)
  find_package(sdl2-image CONFIG REQUIRED)
  find_package(sdl2-ttf CONFIG REQUIRED)
endif () 

# Build configuration - Linux
if (UNIX)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2 -s")
  set(CMAKE_SHARED_LINKER_FLAGS "--as-needed")
endif ()

# Build configuration - Windows
if (WIN32)
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /FORCE:MULTIPLE") # Workaround for Nanosvg and SDL_image header conflicts
  
  #Force static linking for C Runtime
  set(CompilerFlags
        CMAKE_C_FLAGS
        CMAKE_C_FLAGS_DEBUG
        CMAKE_C_FLAGS_RELEASE
        CMAKE_C_FLAGS_MINSIZEREL
        CMAKE_C_FLAGS_RELWITHDEBINFO)
  foreach(CompilerFlag ${CompilerFlags})
    string(REPLACE "/MD" "/MT" ${CompilerFlag} "${${CompilerFlag}}")
    set(${CompilerFlag} "${${CompilerFlag}}" CACHE STRING "msvc compiler flags" FORCE)
  endforeach()
 endif ()
 
 # Configure default applications - Linux
 if (UNIX)
  set(DESKTOP_PATH "/usr/share/applications")
  set(CMD_KODI "${DESKTOP_PATH}/kodi.desktop")
  set(CMD_PLEX "${DESKTOP_PATH}/plexmediaplayer.desktop;TVF")
  if (RPI)
    set(TITLE_GAMES "RetroArch")
    set(ICON_GAMES "retroarch.png")
    set(CMD_GAMES "${DESKTOP_PATH}/retroarch.desktop")
  else ()
    set(TITLE_GAMES "Steam")
    set(ICON_GAMES "steam.png")
    set(CMD_GAMES "${DESKTOP_PATH}/steam.desktop;BigPicture")
  endif ()
endif ()

# Configure default applications - Windows
if (WIN32)
  set(CMD_KODI "\"C:\\Program Files\\Kodi\\kodi.exe\"")
  set(CMD_PLEX "\"C:\\Program Files\\Plex\\Plex Media Player\\PlexMediaPlayer.exe\"")
  set(TITLE_GAMES "Steam")
  set(ICON_GAMES "steam.png")
  set(CMD_GAMES "\"C:\\Program Files (x86)\\Steam\\steam.exe\" steam://open/bigpicture")
endif ()

# Generate Windows application manifest
if (WIN32)
  set(VERSION_M ${PROJECT_VERSION_MAJOR})
  if (PROJECT_VERSION_MINOR)
    set(VERSION_N ${PROJECT_VERSION_MINOR})
  else ()
    set(VERSION_N 0)
  endif()
  if (PROJECT_VERSION_PATCH)
    set(VERSION_O ${PROJECT_VERSION_PATCH})
  else ()
    set(VERSION_O 0)
  endif()
  if (PROJECT_VERSION_TWEAK)
    set(VERSION_P ${PROJECT_VERSION_TWEAK})
  else ()
    set(VERSION_P 0)
  endif()
  configure_file(
    ${PROJECT_SOURCE_DIR}/config/${EXECUTABLE_TITLE}.manifest.in 
	${PROJECT_BINARY_DIR}/${EXECUTABLE_TITLE}.manifest
  )
endif()

# Set time format strings
if (WIN32)
  set(REMOVE_ZERO "#")
else()
  set(REMOVE_ZERO "-")
endif ()
set(TIME_STRING_12HR "%${REMOVE_ZERO}I:%M %p")
set(TIME_STRING_24HR "%H:%M")
set(DATE_STRING_LITTLE "%d %b")
set(DATE_STRING_BIG "%b %${REMOVE_ZERO}d")

#Build source files
add_subdirectory("src")

# Installation - Linux
if (UNIX)
  set(INSTALL_DIR_BIN "${CMAKE_INSTALL_PREFIX}/bin")
  set(INSTALL_DIR_SHARE "${CMAKE_INSTALL_PREFIX}/share/${EXECUTABLE_TITLE}")
  set(INSTALL_DIR_DESKTOP "${CMAKE_INSTALL_PREFIX}/share/applications")
  set(INSTALL_DIR_CONFIGFILE "${INSTALL_DIR_SHARE}")
  set(INSTALL_DIR_ASSETS "${INSTALL_DIR_SHARE}")
  
  # Configure Debian packages
  if (PACKAGE STREQUAL "DEB")
    set(CPACK_DEBIAN_PACKAGE_NAME ${EXECUTABLE_TITLE})
    set(CPACK_DEBIAN_FILE_NAME "DEB-DEFAULT")
    set(CPACK_DEBIAN_PACKAGE_VERSION ${CMAKE_PROJECT_VERSION})
    if (NOT DEB_ARCH)
      if (RPI)
        set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "armhf")
      else ()
        set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
      endif ()
    else ()
      set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "${DEB_ARCH}")
    endif ()
    set(CPACK_DEBIAN_PACKAGE_DEPENDS "libsdl2-2.0-0 (>= ${MIN_SDL_VERSION}), libsdl2-image-2.0-0 (>= ${MIN_SDL_IMAGE_VERSION}), libsdl2-ttf-2.0-0 (>= ${MIN_SDL_TTF_VERSION}), libc6 (>= ${MIN_GLIBC_VERSION})")
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "complexlogic")
    set(CPACK_DEBIAN_PACKAGE_SECTION "video")
    set(CPACK_DEBIAN_ARCHIVE_TYPE "gnutar")
    set(CPACK_DEBIAN_COMPRESSION_TYPE "gzip")
    set(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")
  endif ()
endif ()

# Installation - Windows
if (WIN32)
  set(INSTALL_DIR_BIN "./")
  set(INSTALL_DIR_CONFIGFILE "./")
  set(INSTALL_DIR_ASSETS "./")
  install(FILES "${PROJECT_SOURCE_DIR}/CHANGELOG.txt" DESTINATION "${INSTALL_DIR_BIN}")
  if (NOT PACKAGE)
    set(PACKAGE "ZIP")
  endif ()
endif ()

# Installation - Common
install(TARGETS ${EXECUTABLE_TITLE} DESTINATION "${INSTALL_DIR_BIN}")
install(FILES "${PROJECT_BINARY_DIR}/install/config.ini" DESTINATION "${INSTALL_DIR_CONFIGFILE}")
install(DIRECTORY "${PROJECT_SOURCE_DIR}/assets" DESTINATION "${INSTALL_DIR_ASSETS}")
if (PACKAGE)
  set(CPACK_PACKAGE_NAME ${EXECUTABLE_TITLE})
  set(CPACK_GENERATOR ${PACKAGE})
  include(CPack)
endif ()

#Configure Linux application icons and .desktop file
if (UNIX)
  configure_file("${PROJECT_SOURCE_DIR}/config/launcher.desktop.in" "${PROJECT_BINARY_DIR}/install/${EXECUTABLE_TITLE}.desktop")
  install(FILES "${PROJECT_BINARY_DIR}/install/${EXECUTABLE_TITLE}.desktop" DESTINATION "${INSTALL_DIR_DESKTOP}")
  set(INSTALL_DIR_ICONS "${CMAKE_INSTALL_PREFIX}/share/icons")
  install(FILES "${PROJECT_SOURCE_DIR}/extra/flex-launcher.png" DESTINATION "${INSTALL_DIR_ICONS}/hicolor/48x48/apps")
  install(FILES "${PROJECT_SOURCE_DIR}/extra/flex-launcher.svg" DESTINATION "${INSTALL_DIR_ICONS}/hicolor/scalable/apps")
endif ()
  
# Set paths for config files
set(FONT_PREFIX "${PROJECT_BINARY_DIR}/assets/fonts/")
set(ICONS_PREFIX "${PROJECT_BINARY_DIR}/assets/icons/")
file(COPY "${PROJECT_SOURCE_DIR}/assets" DESTINATION ${PROJECT_BINARY_DIR})

# Generate build config file
if (WIN32)
  string(REPLACE "/" "\\" FONT_PREFIX ${FONT_PREFIX})
  string(REPLACE "/" "\\" ICONS_PREFIX ${ICONS_PREFIX})
endif ()
configure_file("${PROJECT_SOURCE_DIR}/config/config.ini.in" "${PROJECT_BINARY_DIR}/config.ini")

# Generate install config file
if (WIN32)
  set(PATH_ASSETS_RELATIVE "./assets")
  set(FONT_PREFIX "${PATH_ASSETS_RELATIVE}/fonts/")
  set(ICONS_PREFIX "${PATH_ASSETS_RELATIVE}/icons/")
else ()
  set(FONT_PREFIX "${INSTALL_DIR_ASSETS}/assets/fonts/")
  set(ICONS_PREFIX "${INSTALL_DIR_ASSETS}/assets/icons/")
endif ()
  
if (WIN32)
  string(REPLACE "/" "\\" FONT_PREFIX ${FONT_PREFIX})
  string(REPLACE "/" "\\" ICONS_PREFIX ${ICONS_PREFIX})
endif ()
configure_file("${PROJECT_SOURCE_DIR}/config/config.ini.in" "${PROJECT_BINARY_DIR}/install/config.ini")
